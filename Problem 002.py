# Problem 2 from Project Euler (projecteuler.net)

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Function which returns the Fibonacci numbers less than e.
def fibonacci(e):
    fibs = [0,1]
    while fibs[-1] < e:
        fibs.append(fibs[-1] + fibs[-2])
    return fibs[:-1]

# Loop which sums the even Fibonacci numbers.
t = 0
for n in fibonacci(4000000):
    if n%2 == 0: t += n
print(t)

# Pythonic one-liner function, generalized
def fibsum(n):
    return sum([i for i in fibonacci(n) if i%2==0])
