def binconvert(x):

    '''converts base 10 integers to binary form.'''

    if x == 0: return '0'
    
    if x < 0:
        isNeg = True
        x = abs(x)
    else: isNeg = False

    result = ''

    while x > 0:
        result = str(x%2) + result
        x = x/2

    if isNeg: result = '-' + result

    return int(result)

a = [[75],\
[95, 64],\
[17, 47, 82],\
[18, 35, 87, 10],\
[20, 04, 82, 47, 65],\
[19, 01, 23, 75, 03, 34],\
[88, 02, 77, 73, 07, 63, 67],\
[99, 65, 04, 28, 06, 16, 70, 92],\
[41, 41, 26, 56, 83, 40, 80, 70, 33],\
[41, 48, 72, 33, 47, 32, 37, 16, 94, 29],\
[53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],\
[70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],\
[91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],\
[63, 66, 04, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],\
[04, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 04, 23]]

bins = []

res,bi = 0,''
for n in range(0, 2**14):
    b = str(binconvert(n))
    b = (14-len(b))*'0'+b
    t,c,i = 75,1,0
    for x in b:
        i += int(x)
        t += a[c][i]
        c += 1
    if t > res:
        res = t
        bi = b
print res, bi

##for n in range(0,2**14):
##    b = str(binconvert(n))
##    while len(b) < 14:
##        b = '0'+b
##    bins.append(b)
##
##res = 0
##bi = 0
##for b in bins:
##    t = 75
##    c = 1
##    i = 0
##    for x in b:
##        i += int(x)
##        t += a[c][i]
##        c += 1
##    if t > res:
##        res = t
##        bi = b
##print res, bi

##triangle = '75\n\
##95 64\n\
##17 47 82\n\
##18 35 87 10\n\
##20 04 82 47 65\n\
##19 01 23 75 03 34\n\
##88 02 77 73 07 63 67\n\
##99 65 04 28 06 16 70 92\n\
##41 41 26 56 83 40 80 70 33\n\
##41 48 72 33 47 32 37 16 94 29\n\
##53 71 44 65 25 43 91 52 97 51 14\n\
##70 11 33 28 77 73 17 78 39 68 17 57\n\
##91 71 52 38 17 14 91 43 58 50 27 29 48\n\
##63 66 04 68 89 53 67 30 73 16 69 87 40 31\n\
##04 62 98 27 23 09 70 98 73 93 38 53 60 04 23'
##
##triangle = [map(int, line.split(' ')) for line in triangle.split('\n')]
##
##for rowi in xrange(len(triangle) - 2, -1, -1):
##   for itemi in xrange(len(triangle[rowi])):
##      triangle[rowi][itemi] += max((triangle[rowi + 1][itemi], triangle[rowi + 1][itemi + 1]))
##
##print triangle[0][0]

##tree = [
##[75],
##[95, 64],
##[17, 47, 82],
##[18, 35, 87, 10],
##[20, 04, 82, 47, 65],
##[19, 01, 23, 75, 03, 34],
##[88, 02, 77, 73, 07, 63, 67],
##[99, 65, 04, 28, 06, 16, 70, 92],
##[41, 41, 26, 56, 83, 40, 80, 70, 33],
##[41, 48, 72, 33, 47, 32, 37, 16, 94, 29],
##[53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],
##[70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],
##[91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],
##[63, 66, 04, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],
##[04, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 04, 23]]
##
##while len(tree[-1]) > 1:
##    for each in range(len(tree[-2])):
##        tree[-2][each] += max(tree[-1][each], tree[-1][each +1])
##    tree.pop()
##   
##print 'largest path =', tree[0][0]
